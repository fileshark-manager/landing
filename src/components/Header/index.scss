@import '../Root/style/variables';
@import '../Root/style/mixins';

$Header: '.Header';

#{$Header} {
    position: relative;
    height: $headerHeight;
    background-color: map-get($colors, persimmon);
    z-index: 100;

    &__container {
        @include blockPaddingHorizontal;

        position: fixed;
        display: flex;
        align-items: center;
        width: 100%;
        min-width: $minWidth;
        height: $headerHeight;
        background-color: map-get($colors, persimmon);
    }

    &__wrapper {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        width: 100%;

        @include container;
    }

    &__logo {
        svg {
            display: block;
            width: 202px;
            height: 49px;

            @include respond-to('prebig') {
                width: 151px;
                height: 36px;
            }
        }
    }

    &__content {
        display: flex;
        flex-wrap: wrap;
        margin-left: auto;
    }

    &__nav {
        display: flex;
        align-items: center;
        margin-right: 30px;

        @include respond-to('prebig') {
            display: none;
        }
    }

    &__list,
    &__item {
        @include list-reset;
    }

    &__list {
        display: flex;
        flex-wrap: wrap;
    }

    &__item {
        margin-right: 50px;

        @include respond-to('intermediary') {
            margin-right: 30px;
        }

        @include respond-to('prebig') {
            margin-bottom: 5px;
        }

        @include f-last(1) {
            margin-right: 0;
        }
    }

    &__link {
        font-family: map-get($font-family, regular);
        font-size: map-get($font-size, small);
        line-height: map-get($line-height, prelittle);
        color: map-get($colors, white);
        text-decoration: none;
    }

    &__cta {
        @include respond-to('prebig') {
            display: none;
        }
    }

    &__burger {
        display: none;

        @include respond-to('prebig') {
            display: block;
        }
    }
}
